---
layout      : "docs"
title       : "Overview"
group       : "Overlays"
---

<h1 class="mainContent__title mt-0"><%= current_page.data.title %></h1>
<div class="mainContent__intro">You can add overlays to the map to designate points, lines, areas, or collections of objects. Overlays are tied to latitude/longitude coordinates, so they move when you drag or zoom the map.</div>

<div class="ui three item stackable menu">
  <a class="item" href="#IdSystem">Overview</a>
  <a class="item" href="#BaseOverlay">BaseOverlay</a>
  <a class="item" href="#BaseOverlayArray">BaseOverlayArray</a>
</div>

<div class="ui divider my-3"></div>


<!-- Id System
=========================================== -->
<h3 id="IdSystem" class="ui header">Integrated id system</h3>
<p>
  Gmaps implements an id system to make managing multiple overlays a breeze.
  When an overlay is added to a map, it is assigned an id and stored within its respective overlay array.
  These overlay arrays are located within the <b>overlays</b> property of the map.
</p>
<%= code_segment "<p>var</p> myMap = new <bl>gmap</bl>()\n\n" +
  "myMap: {\n" +
  "  overlays: {\n" +
  "    Circle: { ... },    <c>CircleArray</c>\n" +
  "    Label: { ... },     <c>LabelArray</c>\n" +
  "    Marker: { ... },    <c>MarkerArray</c>\n" +
  "    Polygon: { ... },   <c>PolygonArray</c>\n" +
  "    Polyline: { ... },  <c>PolylineArray</c>\n" +
  "    Rectangle: { ... }  <c>RectangleArray</c>\n" +
  "  },\n" +
  "  ...\n" +
  "}"
%>

<p>
  This structure allows you to easily interact with several overlays at once as well as search for a specifc overlay by its id.
</p>


<!-- Searching
=========================================== -->
<h3 id="Searching" class="ui header">Searching</h3>
<p>
  Gmaps prevents you from having to directly interact with the map's overlay arrays by providing an intuitive searching API.
  The search methods will return an overlay array containing any overlays with matching ids.
</p>
<%= code_segment "<c>get all markers</c>\n" +
  "myMap.<bl>markers</bl>()\n\n" +
  "<c>search for specific polygon</c>\n" +
  "myMap.<bl>polygons</bl>(<s>myPolygon</s>)\n\n" +
  "<c>search for multiple labels</c>\n" +
  "myMap.<bl>labels</bl>([<s>myLabel</s>, <o>43</o>])"
%>


<!-- Calling Methods
=========================================== -->
<h3 id="CallingMethods" class="ui header">Calling methods</h3>
<p>
  Most of the time you will be using the map's search and calling methods on the returned overlay arrays.
  The called method will then be executed on every overlay within the array.
</p>
<%= code_segment "<c>hide all markers</c>\n" +
  "myMap.<bl>markers</bl>().hide()\n\n" +
  "<c>show specific polygon</c>\n" +
  "myMap.<bl>polygons</bl>(<s>myPolygon</s>).show()\n\n" +
  "<c>toggle multiple labels</c>\n" +
  "myMap.<bl>labels</bl>([<s>myLabel</s>, <o>43</o>]).toggle()"
%>


<!-- Chaining Methods
=========================================== -->
<h3 id="ChainingMethods" class="ui header">Chaining methods</h3>
<p>
  Most methods in gmaps can be chained together allowing for shorter, more readable code.
</p>
<%= code_segment "<c>add and immediately zoom to marker</c>\n" +
  "myMap.<bl>add</bl>(<s>marker</s>, {\n" +
  "  id: <s>myMarker</s>,\n" + 
  "  position: {\n" + 
  "    lat: <o>51.178835</o>,\n" + 
  "    lng: <o>-1.826240</o>\n" + 
  "  }\n" +
  "}).<bl>zoom</bl>()"
%>

<p>
  The <b>others</b> method allows you to easily call methods for two groups of overlays.
</p>
<%= code_segment "<c>show specific marker and hide all others</c>\n" +
  "myMap.<bl>markers</bl>(<s>myMarker</s>).<bl>show</bl>().<bl>others</bl>().<bl>hide</bl>()"
%>


<!-- Base Overlay
=========================================== -->
<h3 id="BaseOverlay" class="ui header">BaseOverlay</h3>
<p>
  The base class that every overlay is extended from.
</p>

<table class="ui celled table">
  <thead>
    <tr>
      <th class="three wide column">Property</th>
      <th class="three wide column">Type</th>
      <th class="ten wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>All ids are converted into strings upon creation. When searching by id, gmaps will treat <b>43</b> and <b>"43"</b> as the same. Overlay ids must be unique within their respective overlay array.</td>
    </tr>
    <tr>
      <td>map</td>
      <td><a href="<%= data.urls.base %>/map">Map</a></td>
      <td>A reference to the map the overlay belongs too.</td>
    </tr>
    <tr>
      <td>obj</td>
      <td>object</td>
      <td>A reference to the native Google Maps object.</td>
    </tr>
  </tbody>
</table>


<!-- Base Overlay Methods
=========================================== -->
<h3 id="BaseOverlayMethods" class="ui header">BaseOverlay methods</h3>
<table class="ui celled table">
  <thead>
    <tr>
      <th class="four wide column">Method</th>
      <th class="twelve wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>getBounds()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLngBounds">LatLngBounds</a> of the overlay.</td>
    </tr>
    <tr>
      <td>getCenter()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLng">LatLng</a> for the center of the overlay.</td>
    </tr>
    <tr>
      <td>getCenterString()</td>
      <td>Returns the overlay's center in a formatted string. If the <b>delimitedStrings</b> setting is false, it will return a string in JSON format; otherwise it will return a delimited string.</td>
    </tr>
    <tr>
      <td>getOptions(option)</td>
      <td>Returns the value for the specified option. If you do not supply an option, it will return an object with all the overlay's options.</td>
    </tr>
    <tr>
      <td>hide()</td>
      <td>Sets the overlay's <b>visibility</b> to false.</td>
    </tr>
    <tr>
      <td>others()</td>
      <td>Returns a new overlay array containing all the overlays except this one.</td>
    </tr>
    <tr>
      <td>reset()</td>
      <td>Resets the overlays's coordinates and options to its initial values.</td>
    </tr>
    <tr>
      <td>setOptions(options, value)</td>
      <td>Sets the specified option to the supplied value. To set mulitple options, pass in a object as the only parameter.</td>
    </tr>
    <tr>
      <td>show()</td>
      <td>Sets the overlay's <b>visibility</b> to true.</td>
    </tr>
    <tr>
      <td>toggle(condition)</td>
      <td>Toggles the overlay's <b>visibility</b>. You can supply a Boolean value to determine the overlay's <b>visibilty</b>.</td>
    </tr>
    <tr>
      <td>zoom()</td>
      <td>Calculates the overlay's bounds and automatically sets the map's viewport to it.</td>
    </tr>
  </tbody>
</table>


<!-- Base Overlay Array
=========================================== -->
<h3 id="BaseOverlayArray" class="ui header">BaseOverlayArray</h3>
<p>
  The base class that every overlay array is extended from.
</p>

<table class="ui celled table">
  <thead>
    <tr>
      <th class="three wide column">Property</th>
      <th class="three wide column">Type</th>
      <th class="ten wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>data</td>
      <td>array</td>
      <td>An array where all the overlays are stored. Whenever an overlay is added to a map, it will be added to the end of this array.</td>
    </tr>
    <tr>
      <td>map</td>
      <td><a href="<%= data.urls.base %>/map">Map</a></td>
      <td>A reference to the map the overlay array belongs too.</td>
    </tr>
    <tr>
      <td>seed</td>
      <td>number</td>
      <td>The number used for auto-generating overlay ids. These ids will include a double underscore prefix and suffix to avoid name collision.</td>
    </tr>
  </tbody>
</table>


<!-- Base Overlay Array Methods
=========================================== -->
<h3 id="BaseOverlayArrayMethods" class="ui header">BaseOverlayArray methods</h3>
<table class="ui celled table">
  <thead>
    <tr>
      <th class="four wide column">Method</th>
      <th class="twelve wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>copy()</td>
      <td>Returns a copy of the overlay array.</td>
    </tr>
    <tr>
      <td>filter(function)</td>
      <td>Returns an array with all the overlays that pass the test provided by the function.</td>
    </tr>
    <tr>
      <td>find(function)</td>
      <td>Returns the first overlay in the array that satisfies the test provided by the function.</td>
    </tr>
    <tr>
      <td>findById(id)</td>
      <td>Returns the overlay in the array that matches the provided id.</td>
    </tr>
    <tr>
      <td>forEach(function)</td>
      <td>Executes the provided function once for each overlay in the array.</td>
    </tr>
    <tr>
      <td>getBounds()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLngBounds">LatLngBounds</a> containing all the overlays inside the array.</td>
    </tr>
    <tr>
      <td>getCenter()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLng">LatLng</a> for the center of the overlay array's bounds.</td>
    </tr>
    <tr>
      <td>getCenterString()</td>
      <td>Returns the overlay array's center in a formatted string. If the <b>delimitedStrings</b> setting is false, it will return a string in JSON format; otherwise it will return a delimited string.</td>
    </tr>
    <tr>
      <td>getGoogleObjects()</td>
      <td>Returns an array containing all of the native Google Maps objects.</td>
    </tr>
    <tr>
      <td>getIds()</td>
      <td>Returns an array containing all of the overlay ids.</td>
    </tr>
    <tr>
      <td>getOptions(option)</td>
      <td>Returns the value for the specified option. If you do not supply an option, it will return an object with all the overlay's options. If there are multiple overlays inside the array, the return value will be an object using the overlay's ids as the key.</td>
    </tr>
    <tr>
      <td>hide()</td>
      <td>Sets all the overlays' <b>visibility</b> to false.</td>
    </tr>
    <tr>
      <td>includes(id)</td>
      <td>Returns a boolean indicating whether the array contains an overlay with the specified id.</td>
    </tr>
    <tr>
      <td>others()</td>
      <td>Returns a new overlay array containing all the overlays that are not included inside the array.</td>
    </tr>
    <tr>
      <td>pop(count)</td>
      <td>Removes the last overlay in the array from the map and returns it inside a new overlay array. You can pass in a number indicating how many overlays you want to remove. Defaults to 1.</td>
    </tr>
    <tr>
      <td>reset()</td>
      <td>Resets all the overlays' coordinates and options to their initial values.</td>
    </tr>
    <tr>
      <td>shift(count)</td>
      <td>Removes the first overlay in the array from the map and returns it inside a new overlay array. You can pass in a number indicating how many overlays you want to remove. Defaults to 1.</td>
    </tr>
    <tr>
      <td>setOptions(options, value)</td>
      <td>Sets the specified option to the supplied value. To set mulitple options, pass in a object as the only parameter. This will get executed on every overlay inside the array.</td>
    </tr>
    <tr>
      <td>show()</td>
      <td>Sets all the overlays' <b>visibility</b> to true.</td>
    </tr>
    <tr>
      <td>toggle(condition)</td>
      <td>Toggles all the overlays' <b>visibility</b>. You can supply a Boolean value to determine the overlays' <b>visibilty</b>.</td>
    </tr>
    <tr>
      <td>zoom()</td>
      <td>Calculates the overlay array's bounds and automatically sets the map's viewport to it.</td>
    </tr>
  </tbody>
</table>
