---
layout      : "docs"
title       : "Overview"
description : ""
group       : "Components"
---

<h1 class="mainContent__title mt-0"><%= current_page.data.title %></h1>
<div class="mainContent__intro">Components can be added to maps to help visualize data and provide an interactive user-interface.</div>

<div class="ui three item stackable menu">
  <a class="item" href="#IdSystem">Overview</a>
  <a class="item" href="#BaseComponent">Base component</a>
  <a class="item" href="#BaseComponentArray">Base component array</a>
</div>

<div class="ui divider my-3"></div>


<!-- Id System
=========================================== -->
<h3 id="IdSystem" class="ui header">Integrated id system</h3>
<p>
  Gmaps implements an id system to make managing multiple components a breeze.
  When a component is added to a map, it is assigned an id and stored within its respective component array.
  These component arrays are located within the <b>components</b> property of the map.
</p>
<%= code_segment "<p>var</p> myMap = new <bl>gmap</bl>()\n\n" +
  "myMap: {\n" +
  "  components: {\n" +
  "    Circle: { ... },    <c>CircleArray</c>\n" +
  "    Label: { ... },     <c>LabelArray</c>\n" +
  "    Marker: { ... },    <c>MarkerArray</c>\n" +
  "    Polygon: { ... },   <c>PolygonArray</c>\n" +
  "    Polyline: { ... },  <c>PolylineArray</c>\n" +
  "    Rectangle: { ... }  <c>RectangleArray</c>\n" +
  "  },\n" +
  "  ...\n" +
  "}"
%>

<p>
  This structure allows you to easily interact with several components at once as well as search for a specifc component by its id.
</p>


<!-- Searching
=========================================== -->
<h3 id="Searching" class="ui header">Searching</h3>
<p>
  Gmaps prevents you from having to directly interact with the component arrays by providing an intuitive searching API.
  The search methods will return a component array containing any components with matching ids.
</p>
<%= code_segment "<c>get all markers</c>\n" +
  "myMap.<bl>markers</bl>()\n\n" +
  "<c>search for specific id</c>\n" +
  "myMap.<bl>markers</bl>(<s>myMarker</s>)\n\n" +
  "<c>search for multiple ids</c>\n" +
  "myMap.<bl>markers</bl>([<s>myMarker</s>, <o>43</o>])"
%>


<!-- Calling Methods
=========================================== -->
<h3 id="CallingMethods" class="ui header">Calling methods</h3>
<p>
  Most of the time you will be using the map's search methods and calling methods from the returned component arrays.
  The called method will then be executed on every component within the array.
</p>
<%= code_segment "<c>hide all markers</c>\n" +
  "myMap.<bl>markers</bl>().hide()\n\n" +
  "<c>show specific id</c>\n" +
  "myMap.<bl>markers</bl>(<s>myMarker</s>).show()\n\n" +
  "<c>toggle multipe ids</c>\n" +
  "myMap.<bl>markers</bl>([<s>myMarker</s>, <o>43</o>]).toggle()"
%>


<!-- Base Component
=========================================== -->
<h3 id="BaseComponent" class="ui header">Base component</h3>
<p>
  The base class that every component is extended from.
</p>

<table class="ui celled table">
  <thead>
    <tr>
      <th class="three wide column">Property</th>
      <th class="three wide column">Type</th>
      <th class="ten wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>All ids are converted into strings upon creation. When searching by id, gmaps will treat <b>43</b> and <b>"43"</b> as the same. Component ids must be unique within their respective component array.</td>
    </tr>
    <tr>
      <td>map</td>
      <td><a href="<%= data.urls.base %>/map">Map</a></td>
      <td>A reference to the map the component belongs too.</td>
    </tr>
    <tr>
      <td>obj</td>
      <td>object</td>
      <td>A reference to the native Google Maps object.</td>
    </tr>
  </tbody>
</table>


<!-- Base Component Methods
=========================================== -->
<h3 id="BaseComponentMethods" class="ui header">Base component methods</h3>
<table class="ui celled table">
  <thead>
    <tr>
      <th class="four wide column">Method</th>
      <th class="twelve wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>getBounds()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLngBounds">LatLngBounds</a> of the component.</td>
    </tr>
    <tr>
      <td>getCenter()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLng">LatLng</a> for the center of the component.</td>
    </tr>
    <tr>
      <td>getCenterString()</td>
      <td>Returns the component's center in a formatted string. If the <b>delimitedStrings</b> setting is false, it will return a string in JSON format; otherwise it will return a delimited string.</td>
    </tr>
    <tr>
      <td>getOptions(option)</td>
      <td>Returns the value for the specified option. If you do not supply an option, it will return an object with all the component's options.</td>
    </tr>
    <tr>
      <td>hide()</td>
      <td>Sets the component's <b>visibility</b> to false.</td>
    </tr>
    <tr>
      <td>others()</td>
      <td>Returns a new component array containing all the components except this one.</td>
    </tr>
    <tr>
      <td>reset()</td>
      <td>Resets the components's coordinates and options to its initial values.</td>
    </tr>
    <tr>
      <td>setOptions(options, value)</td>
      <td>Sets the specified option to the supplied value. To set mulitple options, pass in a object as the only parameter.</td>
    </tr>
    <tr>
      <td>show()</td>
      <td>Sets the component's <b>visibility</b> to true.</td>
    </tr>
    <tr>
      <td>toggle(condition)</td>
      <td>Toggles the component's <b>visibility</b>. You can supply a Boolean value to determine the component's <b>visibilty</b>.</td>
    </tr>
    <tr>
      <td>zoom()</td>
      <td>Calculates the component's bounds and automatically sets the map's viewport to it.</td>
    </tr>
  </tbody>
</table>


<!-- Base Component Array
=========================================== -->
<h3 id="BaseComponentArray" class="ui header">Base component array</h3>
<p>
  The base class that every component array is extended from.
</p>

<table class="ui celled table">
  <thead>
    <tr>
      <th class="three wide column">Property</th>
      <th class="three wide column">Type</th>
      <th class="ten wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>data</td>
      <td>array</td>
      <td>An array where all the components are stored. Whenever a component is added to a map, it will be added to the end of this array.</td>
    </tr>
    <tr>
      <td>map</td>
      <td><a href="<%= data.urls.base %>/map">Map</a></td>
      <td>A reference to the map the component array belongs too.</td>
    </tr>
    <tr>
      <td>seed</td>
      <td>number</td>
      <td>The number used for auto-generating component ids. These ids will include a double underscore prefix and suffix to avoid name collision.</td>
    </tr>
  </tbody>
</table>


<!-- Base Component Array Methods
=========================================== -->
<h3 id="BaseComponentArrayMethods" class="ui header">Base component array methods</h3>
<table class="ui celled table">
  <thead>
    <tr>
      <th class="four wide column">Method</th>
      <th class="twelve wide column">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>copy()</td>
      <td>Returns a copy of the component array.</td>
    </tr>
    <tr>
      <td>filter(function)</td>
      <td>Returns an array with all the components that pass the test provided by the function.</td>
    </tr>
    <tr>
      <td>find(function)</td>
      <td>Returns the first component in the array that satisfies the test provided by the function.</td>
    </tr>
    <tr>
      <td>findById(id)</td>
      <td>Returns the component in the array that matches the provided id.</td>
    </tr>
    <tr>
      <td>forEach(function)</td>
      <td>Executes the provided function once for each component in the array.</td>
    </tr>
    <tr>
      <td>getBounds()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLngBounds">LatLngBounds</a> containing all the components inside the array.</td>
    </tr>
    <tr>
      <td>getCenter()</td>
      <td>Returns the <a href="<%= data.urls.googleDocs %>/#LatLng">LatLng</a> for the center of the component array's bounds.</td>
    </tr>
    <tr>
      <td>getCenterString()</td>
      <td>Returns the component array's center in a formatted string. If the <b>delimitedStrings</b> setting is false, it will return a string in JSON format; otherwise it will return a delimited string.</td>
    </tr>
    <tr>
      <td>getGoogleObjects()</td>
      <td>Returns an array containing all of the native Google Maps objects.</td>
    </tr>
    <tr>
      <td>getIds()</td>
      <td>Returns an array containing all of the component ids.</td>
    </tr>
    <tr>
      <td>getOptions(option)</td>
      <td>Returns the value for the specified option. If you do not supply an option, it will return an object with all the component's options. If there are multiple components inside the array, the return value will be an object using the component's ids as the key.</td>
    </tr>
    <tr>
      <td>hide()</td>
      <td>Sets all the components' <b>visibility</b> to false.</td>
    </tr>
    <tr>
      <td>includes(id)</td>
      <td>Returns a boolean indicating whether the array contains a component with the specified id.</td>
    </tr>
    <tr>
      <td>others()</td>
      <td>Returns a new component array containing all the components that are not included inside the array.</td>
    </tr>
    <tr>
      <td>pop(count)</td>
      <td>Removes the last component in the array from the map and returns it inside a new component array. You can pass in a number indicating how many components you want to remove. Defaults to 1.</td>
    </tr>
    <tr>
      <td>reset()</td>
      <td>Resets all the components' coordinates and options to their initial values.</td>
    </tr>
    <tr>
      <td>shift(count)</td>
      <td>Removes the first component in the array from the map and returns it inside a new component array. You can pass in a number indicating how many components you want to remove. Defaults to 1.</td>
    </tr>
    <tr>
      <td>setOptions(options, value)</td>
      <td>Sets the specified option to the supplied value. To set mulitple options, pass in a object as the only parameter. This will get executed on every component inside the array.</td>
    </tr>
    <tr>
      <td>show()</td>
      <td>Sets all the components' <b>visibility</b> to true.</td>
    </tr>
    <tr>
      <td>toggle(condition)</td>
      <td>Toggles all the components' <b>visibility</b>. You can supply a Boolean value to determine the components' <b>visibilty</b>.</td>
    </tr>
    <tr>
      <td>zoom()</td>
      <td>Calculates the component array's bounds and automatically sets the map's viewport to it.</td>
    </tr>
  </tbody>
</table>
